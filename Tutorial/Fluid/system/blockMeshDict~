/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
convertToMeters 0.001;

vertices
    (
// divergencia
	(-1.767767 0.732233 0)
	(1.767767 0.732233 0)
	(10 10 0)
	(-10 10 0)

	(-1.767767 0.732233 4)
	(1.767767 0.732233 4)
	(10 10 4)
	(-10 10 4)
//cilindro entrada 

	(0.666667 3.166667 -8)
	(-0.666667 3.166667 -8)
	(-0.666667 1.833333 -8)
	(0.666667 1.833333 -8)
	(1.414214 3.914214 -8)
	(-1.414214 3.914214 -8)
	(-1.414214 1.085786 -8)
	(1.414214 1.085786 -8)

	(0.666667 3.166667 0)
	(-0.666667 3.166667 0)
	(-0.666667 1.833333 0)
	(0.666667 1.833333 0)
	(1.414214 3.914214 0)
	(-1.414214 3.914214 0)
	(-1.414214 1.085786 0)
	(1.414214 1.085786 0)
	

//electrodo poroso
	(10 50 0)
	(-10 50 0)
	(10 50 4)
	(-10 50 4)
// convergencia salida
	(1.767767 59.267767 0)
	(-1.767767 59.267767 0)
	(1.767767 59.267767 4)
	(-1.767767 59.267767 4)
// cilindro salida
	(0.666667 58.166667 -8)
	(-0.666667 58.166667 -8)
	(-0.666667 56.833333 -8)
	(0.666667 56.833333 -8)
	(1.414214 58.914214 -8)
	(-1.414214 58.914214 -8)
	(-1.414214 56.085786 -8)
	(1.414214 56.085786 -8)

	(0.666667 58.166667 0)
	(-0.666667 58.166667 0)
	(-0.666667 56.833333 0)
	(0.666667 56.833333 0)
	(1.414214 58.914214 0)
	(-1.414214 58.914214 0)
	(-1.414214 56.085786 0)
	(1.414214 56.085786 0)

	
    );

    blocks
    (
  	
	
	hex (0 1 2 3 4 5 6 7) (30 30 20) simpleGrading (1 1 1)
	
//cilindro entrada
 	hex (8 9 10 11 16 17 18 19) (15 15 20) simpleGrading (1 1 1)
 	hex (15 12 8 11 23 20 16 19) (15 15 20) simpleGrading (1 1 1)
	hex (8 12 13 9 16 20 21 17) (15 15 20) simpleGrading (1 1 1)
	hex (9 13 14 10 17 21 22 18) (15 15 20) simpleGrading (1 1 1)
	hex (11 10 14 15 19 18 22 23) (15 15 20) simpleGrading (1 1 1) 
//electrodo poroso
	
	hex (2 24 25 3 6 26 27 7) (100 30 20) simpleGrading (1 1 1)

// convergencia salida
	hex (24 28 29 25 26 30 31 27) (30 30 20) simpleGrading (1 1 1) 

// cilindro salida
 	hex (32 33 34 35 40 41 42 43) (15 15 20) simpleGrading (1 1 1)
 	hex (39 36 32 35 47 44 40 43) (15 15 20) simpleGrading (1 1 1)
	hex (32 36 37 33 40 44 45 41) (15 15 20) simpleGrading (1 1 1)
	hex (33 37 38 34 41 45 46 42) (15 15 20) simpleGrading (1 1 1)
	hex (35 34 38 39 43 42 46 47) (15 15 20) simpleGrading (1 1 1) 
    );

     edges
    (


// divergencia entrada        

	arc 0 1 (0 0 0)
	arc 4 5 (0 0 4)
	
//cilindro entrada

	arc 12 15 (2 2.5 -8)
	arc 15 14 (0 0.5 -8)
	arc 14 13 (-2 2.5 -8)
	arc 13 12 (0 4.5 -8)
	arc 20 23 (2 2.5 0)
	arc 23 22 (0 0.5 0)
	arc 22 21 (-2 2.5 0)
	arc 21 20 (0 4.5 0)
// convergencia salida
	arc 28 29 (0 60 0)
	arc 30 31 (0 60 4)

// cilindro salida
  	arc 36 39 (2 57.5 -8)
	arc 39 38 (0 55.5 -8)
	arc 38 37 (-2 57.5 -8)
	arc 37 36 (0 59.5 -8)
	arc 44 47 (2 57.5 0)
	arc 47 46 (0 55.5 0)
	arc 46 45 (-2 57.5 0)
	arc 45 44 (0 59.5 0)
	
 );

     boundary
    (
        inlet 
        {
            type patch;
            faces
            (
		(8 9 10 11)
		(8 12 13 9)
		(9 13 14 10)
		(10 14 15 11)
		(8 11 15 12)
	
            );
        }
        outlet
        {
            type patch;
            faces
            (
		(32 33 34 35)
		(32 35 39 36)
		(32 36 37 33)
		(33 37 38 34)
		(34 38 39 35)
		
		
            );
        }

	isolation
        {
            type wall;
            faces
            (
//divergente
		(1 5 6 2)
		(0 3 7 4)
		//(0 1 2 3)
		(4 7 6 5)
		(0 4 5 1)
//cilindro
		(15 23 20 12)
		(12 20 21 13)
		(13 21 22 14)
		(14 22 23 15)
//poroso
		(2 24 25 3)
		(2 6 26 24)
		(3 25 27 7)
		(6 7 27 26)
//convergente
		(28 30 31 29)		
		//(24 28 29 25)
		(24 26 30 28)
		(26 27 31 30)
		(25 29 31 27)
//cilidro salida
		(39 47 44 36)
		(36 44 45 37)
		(37 45 46 38)
		(38 46 47 39)
		

	    );
        } 
 	master1
    	{
            type patch;
            faces
            (
            	(19 16 20 23)
	    	(16 17 21 20)
            	(18 22 21 17)
	    	(18 19 23 22)
	    	(19 18 17 16)
            );
    	}
    	slave1
    	{
        	type wall;
        	faces
        	(
           	 (0 1 2 3)
        	);
	}
 	master2
    	{
            type patch;
            faces
            (
            	(43 42 41 40)
	    	(47 46 42 43)
            	(46 45 41 42)
	    	(45 44 40 41)
	    	(40 44 47 43)
            );
    	}
    	slave2
    	{
        	type wall;
        	faces
        	(
           	 (24 28 29 25)
        	);
	}
    );

mergePatchPairs
(
	(master1 slave1)
	(master2 slave2)
);

